//플러그인 의존성들을 적용할 것인지를 결정하는 코드
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'toyproject'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

//의존성(라이브러리)들을 어떤 원격 저장소에서 받을지 정하는 코드
repositories {
	mavenCentral()
}

//프로젝트 개발에 필요한 의존성(라이브러리)들을 선언하는 코드
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'mysql:mysql-connector-java:8.0.26'
	// AWS SDK for S3
	implementation 'software.amazon.awssdk:s3:2.20.50'
	// Multipart File Upload (Spring Boot 기본 제공)
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// Jackson (JSON 직렬화 / 역직렬화)
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	// Spring Boot에 ElasticSearch 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'co.elastic.clients:elasticsearch-java:8.11.1'

	compileOnly 'org.projectlombok:lombok'
    // H2 Database!!
	//runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//testCode slf4j 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}
